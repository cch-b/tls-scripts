#!/bin/bash
#
# Tests done.

log_file="/Users/peter/dev/ucltrees/logs/fg5c1/STEP01_generate_ply_files.log"
# echo "Log file: $log_file"

mkdir -p $(dirname $log_file)

# Check the file exists
if [ ! -f "$log_file" ]; then
  touch $log_file
fi

# Clear the log file
echo "" > $log_file
#echo "Log file: $log_file" >> $log_file

test_sed() {
  mode=$1
  if [ "$mode" == "bg" ]; then
    (
      echo "BG SED: Old log file: $log_file" | tee -a $log_file
      echo "" | tee -a $log_file
      echo "test using sed"   | tee -a $log_file
      new_log_file=$(echo $log_file | sed 's/\.log/_SDONE&/')
      echo "new_log_file after: $new_log_file" | tee -a $log_file
      echo "echo copying with sed"  | tee -a $log_file
      cp $log_file $new_log_file
      echo "" | tee -a $log_file
    ) &> /dev/null & disown
  else
    echo "FG: Old log file: $log_file"
    echo ""
    echo "test using sed"
    new_log_file=$(echo $log_file | sed 's/\.log/_SDONE&/')
    echo "new_log_file after: $new_log_file"
    echo "echo copying with sed"
    cp $log_file $new_log_file
    echo ""
  fi
}

test_parameter() {
  mode=$1
  if [ "$mode" == "bg" ]; then
    (
      echo "BG Parameter: Old log_file: $log_file" | tee -a $log_file
      echo "" | tee -a $log_file
      echo "test using parameter expansion"  | tee -a $log_file
      new_log_file="${log_file/%.log/_PDONE.log}"
      echo "new_log_file after: $new_log_file" | tee -a $log_file
      echo "echo copying with parameter expansion" | tee -a $log_file
      cp $log_file $new_log_file
      echo "" | tee -a $log_file
    ) &> /dev/null & disown
  else
    echo "Old log_file: $log_file"
    echo ""
    echo "test using parameter expansion"
    new_log_file="${log_file/%.log/_PDONE.log}"
    echo "new_log_file after: $new_log_file"
    echo "echo copying with parameter expansion"
    cp $log_file $new_log_file
    echo ""
  fi
}

do_background_job() {
  # Create a temporary script file
  tmp_script=$(mktemp)

  test_string="/home/users/ucfacc2/dev/ucltrees/logs/fg5c1/STEP01_do_a_test.log"
  test_string_done="${test_string/%.log/_DONE.log}"

  # Use parameter expansion to append "_DONE" before the ".log" extension
  new_log_file="${log_file/%.log/_DONE.log}"

  # Print the value of new_log_file after the modification
  echo "new_log_file after: ${new_log_file}" >> $log_file

  # Write the commands to the temporary script file
  cat << EOF > $tmp_script
    #!/bin/bash
    echo "Running" >> $log_file
    echo "Log file: $log_file" >> $log_file

    echo "Test string: ${test_string}" >> $log_file
    echo "Test string done: ${test_string_done}" >> $log_file

    # Print the old log file
    echo "Old log file: $log_file" >> $log_file
    echo ${log_file/%.log/_DONE.log} >> $log_file

    # Print the new log file
    echo "New log file: ${new_log_file}" >> $log_file

    # Rename the log file
    mv "${log_file}" "${new_log_file}" || {
      echo "Error: Failed to rename the log file." >> $log_file
      exit 1
    }
EOF

  # Make the temporary script file executable
  chmod +x $tmp_script

  # Run the temporary script file with nohup
  nohup bash $tmp_script &> /dev/null &

  }

#do_background_job() {
#  # Create a temporary script file
#  tmp_script=$(mktemp)
#  test_string="/home/users/ucfacc2/dev/ucltrees/logs/fg5c1/STEP01_do_a_test.log"
#  # Write the commands to the temporary script file
#  cat << EOF > $tmp_script
#    #!/bin/bash
#    echo "Running" >> $log_file
#
#    echo "Test string: ${test_string}" >> $log_file
#    echo ${test_string/%.log/_DONE.log} >> $log_file
#
#
#EOF
#  # Make the temporary script file executable
#  chmod +x $tmp_script
#
#  # Run the temporary script file with nohup
#  nohup bash $tmp_script &> /dev/null &
#
#  }

# Call the functions with "fg" or "bg" as the argument
#test_sed "fg"
#test_parameter "fg"
#test_sed "bg"
#test_parameter "bg"
do_background_job
