#!/bin/bash
#
# Generate the tile index for the downsampled data

# Source the functions from functions.sh
source "$SCRIPT_DIR/utils/functions.sh"

# EDIT: Define the script, its path and arguments
script_name="tile_index.py"
script_path="$SCRIPT_DIR/python"
script_args="" # see below
log_name="STEP03_tile_index"  # If blank, the log name will be the script name
mode="bg" # Default mode is background

script_code() {
  echo "Running..."
  ############################################
  ## Put the script specific code here
  ## This executes in the project directory ##
  ############################################

  # Activate the conda environment
  conda activate pdal

  # Define the directories
  downsample_dir="$SCRATCH_ROOT/$project_name/downsample"
  tile_file="$project_path/tile_index.dat"

  # Clear the contents of the tile_index.dat if it exists
  if [ -f "$tile_file" ]; then
    echo "Removing the existing tile_index.dat"
    rm "$tile_file"
    touch "$tile_file"
  fi

  # Identify the log_file
    # If the log name is not provided, use the script name
  if [ -z "$log_name" ]; then
    log_file="$LOG_ROOT/$project_name/$(basename $script_name).log"
  else
    log_file="$LOG_ROOT/$project_name/$log_name.log"
  fi

   # Compose the script arguments
  script_args="--pc $downsample_dir --tile-index $tile_file --verbose --log-file $log_file"

  ############################################
  ## End of the script specific code here   ##
  ############################################
}

# Call the functions defined in functions.sh
# This needs to be in the right order.
parse_arguments "$@"
check_project_name
check_projects_file
change_directory
script_code
generate_command
run_command
